/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

video {
  width: 100%;
  height: 100%;
  object-fit: fill;
  object-position: bottom;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html {
  scroll-behavior: smooth;
}

body {
  min-width: 100%;
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
}

a {
  text-decoration: none;
  color: inherit;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill="none"], [fill^="url"])) {
  fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

input[type="radio"] {
  position: absolute;

  display: none;
  overflow: hidden;
}

.radio_label {
  padding: 5.5px 16px;
  position: relative;
  display: inline-block;

  cursor: pointer;
  border: 1px solid var(--gray-400);

  font-family: var(--font-family);
  font-weight: 700;
  font-size: 14px;
  line-height: 150%;
  color: var(--gray-700);

  border-radius: 4px;
}

input[type="radio"]:checked + .radio_label {
  background-color: var(--primary) !important;
  color: white;
}

input[type="email"] {
  width: 100%;

  height: clamp(34px, 5vw, 52px) !important;
  border: none;
  outline: 1px solid var(--gray-400);

  font-size: clamp(10px, 2vw, 16px) !important;

  border-radius: 4px;
  background: var(--white);

  padding: 13px 7px;
}

input[type="email"]::placeholder {
  font-family: var(--font-family);
  font-size: clamp(12px, 2vw, 16px) !important;
  line-height: 160%;
  color: var(--gray-600);
}

input[type="email"]:focus {
  outline: 1px solid var(--primary);
}

/* Для всього документа */
::-webkit-scrollbar {
  width: 0px; /* Ширина вертикального скролла */
  height: 0px; /* Висота горизонтального скролла */
}

/* Смуга прокрутки (фоновий трек) */
::-webkit-scrollbar-track {
  background: var(--gray-100); /* Колір треку */
}

/* Ручка прокрутки */
::-webkit-scrollbar-thumb {
  background: var(--gray-900); /* Колір ручки */
}

/* При наведенні мишкою */
::-webkit-scrollbar-thumb:hover {
  background: var(--primary); /* Зміна кольору при hover */
}
